package projekt.tin.view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import projekt.tin.controller.DaysGenerator;
import projekt.tin.controller.TextFileReader;

@SuppressWarnings("serial")
public class MainOptionsPanel extends JPanel implements ActionListener {

	private JLabel lFileOne, lFileTwo;
	private JButton bFileOne, bFileTwo;
	private JRadioButton rbMethod1, rbMethod2, rbMethod3, rbMethod4;
	private ButtonGroup bgMethodChooser;
	private List<Double> oneDayCallsInQuarter;
	private int numberOfCallsInDay;
	public static int TCBH = 1, ADPQH = 2;
	private JButton bStart;
	
	public MainOptionsPanel() {
		super(new GridBagLayout());
		createAndShowComponents();
	}

	public void createAndShowComponents(){
		setVisible(true);
		setPreferredSize(new Dimension(250, 300));
		GridBagConstraints gbc = new GridBagConstraints();

		setBorder(BorderFactory.createTitledBorder("Opcje g³owne"));
		setBackground(Color.decode("#C9C3C3"));

		bStart = new JButton("Uruchom program");
		bStart.setEnabled(false);
		
		lFileOne = new JLabel("Wybierz pierwszy plik");
		lFileTwo = new JLabel("Wybierz drugi plik");
		bFileOne = new JButton("...");
		bFileTwo = new JButton("...");

		bFileTwo.setEnabled(false);

		rbMethod1 = new JRadioButton("Metoda 1", true);
		rbMethod2 = new JRadioButton("Metoda 2");
		rbMethod3 = new JRadioButton("Metoda 3");
		rbMethod4 = new JRadioButton("Metoda 4");

		bgMethodChooser = new ButtonGroup();
		bgMethodChooser.add(rbMethod1);
		bgMethodChooser.add(rbMethod2);
		bgMethodChooser.add(rbMethod3);
		bgMethodChooser.add(rbMethod4);

		bFileOne.addActionListener(this);
		bFileTwo.addActionListener(this);

		/*
		 * /* Definiowanie uk³adu komponentów
		 */

		gbc.insets = new Insets(5, 5, 5, 5);
		gbc.anchor = GridBagConstraints.LINE_END;
		gbc.gridx = 0;
		gbc.gridy = 0;
		add(lFileOne, gbc);
		gbc.gridy++;
		add(lFileTwo, gbc);

		gbc.anchor = GridBagConstraints.LINE_START;
		gbc.gridx = 1;
		gbc.gridy = 0;
		add(bFileOne, gbc);
		gbc.gridy++;
		add(bFileTwo, gbc);

		gbc.insets = new Insets(10, 0, 10, 0);
		gbc.gridx = 0;
		gbc.gridy = 2;
		add(rbMethod1, gbc);
		gbc.gridy++;
		add(rbMethod2, gbc);
		gbc.gridy++;
		add(rbMethod3, gbc);
		gbc.gridy++;
		gbc.weighty = 1;
		gbc.anchor = GridBagConstraints.FIRST_LINE_START;

		add(rbMethod4, gbc);
	}
	
	public boolean canGenerate(){
		if(oneDayCallsInQuarter!=null){
			return true;
		}
		else {
			return false;
		}
	}
	
	public List<List> getGeneratedDays(){
		if(canGenerate()){
			DaysGenerator daysGenerator = new DaysGenerator();
			return daysGenerator.generateDays(oneDayCallsInQuarter);
		}
		else{
			return new ArrayList<List>();
		}
	}
	
	public int getMethod(){
		int result = 0;
		if(rbMethod1.isSelected()){
			result = TCBH;
		}
		else if(rbMethod2.isSelected()){
			result = ADPQH;
		}
		return result;
	}
	
	@Override
	public void actionPerformed(ActionEvent evt) {
		Object src = evt.getSource();
		TextFileReader fileReader;
		if (src == bFileOne) {
			try {
				UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
			} catch (ClassNotFoundException | InstantiationException
					| IllegalAccessException | UnsupportedLookAndFeelException e) {
				e.printStackTrace();
			}
			JFileChooser fileChooser = new JFileChooser();
			if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
				File file = fileChooser.getSelectedFile();
				lFileOne.setText(file.getName());
				bFileTwo.setEnabled(true);
				fileReader = new TextFileReader(file.getAbsolutePath());
				numberOfCallsInDay = fileReader.countFileLines();
			}
		}
		else if (src == bFileTwo) {
			JFileChooser fileChooser = new JFileChooser();
			oneDayCallsInQuarter = new ArrayList<>();
			if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
				File file = fileChooser.getSelectedFile();
				fileReader = new TextFileReader(file.getAbsolutePath());
				oneDayCallsInQuarter = fileReader.numberOfCallsInEachQuarter(numberOfCallsInDay);
				lFileTwo.setText(file.getName());
				bStart.setEnabled(true);
			}
		}
	}

	public JButton getbStart() {
		return bStart;
	}

	public void setbStart(JButton bStart) {
		this.bStart = bStart;
	}
}
